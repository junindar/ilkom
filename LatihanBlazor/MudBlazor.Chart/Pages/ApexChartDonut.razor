@page "/ApexChartDonut"

<TitlePrompt Title="Donut Chart" />
<div class="row">
    <MudItem md="6">
        <MudCard Outlined="true">
            <MudCardContent>
                <MudText>Basic</MudText>
                <div class="row">

                    <ApexCharts.ApexChart TItem="Order"
                               Title="Order Gross Value">

                        <ApexPointSeries TItem="Order"
                                         Items="Orders"
                                         SeriesType="SeriesType.Donut"
                                         Name="Gross Value"
                                         XValue="@(e => e.Country)"
                                         YAggregate="@(e => e.Sum(e => e.GrossValue))"
                                         OrderByDescending="e=>e.Y" />
                    </ApexCharts.ApexChart>

                </div>

            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem md="6">
        <MudCard Outlined="true">
            <MudCardContent>
                <MudText>Color</MudText>
                <div class="row">

                    <ApexCharts.ApexChart TItem="Order"
                                          Title="Order Gross Value">

                        <ApexPointSeries TItem="Order"
                                         Items="Orders"
                                         SeriesType="SeriesType.Donut"
                                         Name="Gross Value"
                                         XValue="@(e => e.Country)"
                                         YAggregate="@(e => e.Sum(e => e.GrossValue))"
                                         PointColor="e=> GetPointColor(e)" ShowDataLabels 
                                         OrderByDescending="e=>e.Y" />
                    </ApexCharts.ApexChart>

                </div>

            </MudCardContent>
        </MudCard>
    </MudItem>
</div>


<div class="row">
    <br />
</div>
<div class="row">
    <MudItem md="6">
        <MudCard Outlined="true">
            <MudCardContent>
                <MudText>Size</MudText>
                <div class="row">

                    <ApexCharts.ApexChart TItem="Order" Options="options"
                                          Title="Order Gross Value">

                        <ApexPointSeries TItem="Order"
                                         Items="Orders"
                                         SeriesType="SeriesType.Donut"
                                         Name="Gross Value"
                                         XValue="@(e => e.Country)"
                                         YAggregate="@(e => e.Sum(e => e.GrossValue))"
                                         OrderByDescending="e=>e.Y" />
                    </ApexCharts.ApexChart>

                </div>

            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem md="6">
        <MudCard Outlined="true">
            <MudCardContent>
                <MudText>Data Label</MudText>
                <div class="row">

                    <ApexCharts.ApexChart TItem="Order" Options="optionsLabel"
                                          Title="Order Gross Value">

                        <ApexPointSeries TItem="Order"
                                         Items="Orders"
                                         SeriesType="SeriesType.Donut"
                                         Name="Gross Value"
                                         XValue="@(e => e.Country)"
                                         YAggregate="@(e => e.Sum(e => e.GrossValue))"
                                         PointColor="e=> GetPointColor(e)" ShowDataLabels="true" 
                                         OrderByDescending="e=>e.Y" />
                    </ApexCharts.ApexChart>

                </div>

            </MudCardContent>
        </MudCard>
    </MudItem>
</div>


<div class="row">
    <br />
</div>


@code {

    public class Order
    {
        public string Country { get; set; } = "";
        public decimal GrossValue { get; set; }
        public decimal NetValue { get; set; }
    }

   static List<Order> GetOrders()
   {
       List<Order> list = new List<Order>()
       {
           new Order { Country = "France",GrossValue = 5500,NetValue = 4500},
           new Order { Country = "Brazil",GrossValue = 6500,NetValue = 7800},
           new Order { Country = "Sweden",GrossValue = 7800,NetValue = 3670},
           new Order { Country = "Spain",GrossValue = 1400,NetValue = 4500}
       };

        return list;
    }

    private List<Order> Orders { get; set; } = GetOrders();
    private ApexChartOptions<Order> options;
    private ApexChartOptions<Order> optionsLabel;
    protected override void OnInitialized()
    {
        options = new ApexChartOptions<Order>
        {
            PlotOptions = new PlotOptions
            {
                Pie = new PlotOptionsPie()
                {
                    Donut = new PlotOptionsDonut()
                    {
                        Size = "40%"
                    }
                }
            }
        };

        optionsLabel = new ApexChartOptions<Order>
        {
            PlotOptions = new PlotOptions
            {
                Pie = new PlotOptionsPie()
                {
                    Donut = new PlotOptionsDonut()
                    {
                        Labels = new DonutLabels()
                        {
                            Total = new DonutLabelTotal()
                            {
                                Show = true
                            }
                           
                        }
                    }
                }
            }
        };
        
    }


    private string GetPointColor(Order order)
    {
        switch (order.Country)
        {
            case "France":
                return "#e3001b";
            case "Brazil":
                return "#005ba3";
            case "Sweden":
                return "#ffd500";
            case "Spain":
                return "#00783c";
            default:
                return "#87775d";
        }



    }
}
